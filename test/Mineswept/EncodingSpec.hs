module Mineswept.EncodingSpec (spec) where

import Data.Text (Text)
import Data.Text qualified as T
import Data.Time.Clock.POSIX (posixSecondsToUTCTime)
import Mineswept.Encoding (encode)
import Mineswept.Game (Parameters (..), initialGame)
import Test.Hspec (Spec, describe, it, shouldBe)

spec :: Spec
spec = do
  describe "encode" $ do
    it "encodes initial games" $ do
      let ts = posixSecondsToUTCTime 1620612700
      let game = initialGame params ts
      encode game `shouldBe` encodedInitial

params :: Parameters
params =
  Parameters
    { width = 30,
      height = 16,
      version = 1,
      mineCount = 99,
      seed = 0
    }

encodedInitial :: Text
encodedInitial =
  T.unlines
    [ "1",
      "30",
      "16",
      "99",
      "0",
      "",
      "P",
      "S",
      "1620612700",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????",
      "??????????????????????????????"
    ]
